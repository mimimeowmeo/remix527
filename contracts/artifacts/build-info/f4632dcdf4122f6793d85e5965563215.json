{
	"id": "f4632dcdf4122f6793d85e5965563215",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/5_Demo2.sol": {
				"content": "//SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.7.4;\n\ncontract Demo2 {\n    function getResult(uint256 pa, uint256 pb)\n        public\n        pure\n        returns (string memory)\n    {\n        uint256 a = pa;\n        uint256 b = pb;\n        uint256 result = a + b;\n        return integerToString(result);\n    }\n\n    function integerToString(uint256 i) internal pure returns (string memory) {\n        if (i == 0) {\n            return \"0\";\n        }\n        // calculate now many digits?\n\n        uint256 j = i;\n        uint256 len;\n        while (j != 0) {\n            j /= 10;\n            len++;\n        }\n\n        bytes memory bstr = new bytes(len);\n        uint256 k = len - 1;\n\n        while (i != 0) {\n            bstr[k--] = bytes1(uint8(48 + (i % 10)));\n            i /= 10;\n        }\n        return string(bstr);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/5_Demo2.sol": {
				"Demo2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pa",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "pb",
									"type": "uint256"
								}
							],
							"name": "getResult",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/5_Demo2.sol\":60:832  contract Demo2 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/5_Demo2.sol\":60:832  contract Demo2 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x949f80c5\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/5_Demo2.sol\":81:315  function getResult(uint256 pa, uint256 pb)... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_6\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_7:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_9\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_7)\n    tag_9:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_10\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_10:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_6:\n        /* \"contracts/5_Demo2.sol\":169:182  string memory */\n      0x60\n        /* \"contracts/5_Demo2.sol\":198:207  uint256 a */\n      0x00\n        /* \"contracts/5_Demo2.sol\":210:212  pa */\n      dup4\n        /* \"contracts/5_Demo2.sol\":198:212  uint256 a = pa */\n      swap1\n      pop\n        /* \"contracts/5_Demo2.sol\":222:231  uint256 b */\n      0x00\n        /* \"contracts/5_Demo2.sol\":234:236  pb */\n      dup4\n        /* \"contracts/5_Demo2.sol\":222:236  uint256 b = pb */\n      swap1\n      pop\n        /* \"contracts/5_Demo2.sol\":246:260  uint256 result */\n      0x00\n        /* \"contracts/5_Demo2.sol\":267:268  b */\n      dup2\n        /* \"contracts/5_Demo2.sol\":263:264  a */\n      dup4\n        /* \"contracts/5_Demo2.sol\":263:268  a + b */\n      add\n        /* \"contracts/5_Demo2.sol\":246:268  uint256 result = a + b */\n      swap1\n      pop\n        /* \"contracts/5_Demo2.sol\":285:308  integerToString(result) */\n      tag_12\n        /* \"contracts/5_Demo2.sol\":301:307  result */\n      dup2\n        /* \"contracts/5_Demo2.sol\":285:300  integerToString */\n      tag_13\n        /* \"contracts/5_Demo2.sol\":285:308  integerToString(result) */\n      jump\t// in\n    tag_12:\n        /* \"contracts/5_Demo2.sol\":278:308  return integerToString(result) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/5_Demo2.sol\":81:315  function getResult(uint256 pa, uint256 pb)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/5_Demo2.sol\":321:830  function integerToString(uint256 i) internal pure returns (string memory) {... */\n    tag_13:\n        /* \"contracts/5_Demo2.sol\":380:393  string memory */\n      0x60\n        /* \"contracts/5_Demo2.sol\":414:415  0 */\n      0x00\n        /* \"contracts/5_Demo2.sol\":409:410  i */\n      dup3\n        /* \"contracts/5_Demo2.sol\":409:415  i == 0 */\n      eq\n        /* \"contracts/5_Demo2.sol\":405:452  if (i == 0) {... */\n      iszero\n      tag_15\n      jumpi\n        /* \"contracts/5_Demo2.sol\":431:441  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_14)\n        /* \"contracts/5_Demo2.sol\":405:452  if (i == 0) {... */\n    tag_15:\n        /* \"contracts/5_Demo2.sol\":500:509  uint256 j */\n      0x00\n        /* \"contracts/5_Demo2.sol\":512:513  i */\n      dup3\n        /* \"contracts/5_Demo2.sol\":500:513  uint256 j = i */\n      swap1\n      pop\n        /* \"contracts/5_Demo2.sol\":523:534  uint256 len */\n      0x00\n        /* \"contracts/5_Demo2.sol\":544:610  while (j != 0) {... */\n    tag_16:\n        /* \"contracts/5_Demo2.sol\":556:557  0 */\n      0x00\n        /* \"contracts/5_Demo2.sol\":551:552  j */\n      dup3\n        /* \"contracts/5_Demo2.sol\":551:557  j != 0 */\n      eq\n        /* \"contracts/5_Demo2.sol\":544:610  while (j != 0) {... */\n      tag_17\n      jumpi\n        /* \"contracts/5_Demo2.sol\":578:580  10 */\n      0x0a\n        /* \"contracts/5_Demo2.sol\":573:580  j /= 10 */\n      dup3\n      dup2\n      tag_18\n      jumpi\n      invalid\n    tag_18:\n      div\n      swap2\n      pop\n        /* \"contracts/5_Demo2.sol\":594:599  len++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/5_Demo2.sol\":544:610  while (j != 0) {... */\n      jump(tag_16)\n    tag_17:\n        /* \"contracts/5_Demo2.sol\":620:637  bytes memory bstr */\n      0x00\n        /* \"contracts/5_Demo2.sol\":650:653  len */\n      dup2\n        /* \"contracts/5_Demo2.sol\":640:654  new bytes(len) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_20:\n      pop\n        /* \"contracts/5_Demo2.sol\":620:654  bytes memory bstr = new bytes(len) */\n      swap1\n      pop\n        /* \"contracts/5_Demo2.sol\":664:673  uint256 k */\n      0x00\n        /* \"contracts/5_Demo2.sol\":682:683  1 */\n      0x01\n        /* \"contracts/5_Demo2.sol\":676:679  len */\n      dup4\n        /* \"contracts/5_Demo2.sol\":676:683  len - 1 */\n      sub\n        /* \"contracts/5_Demo2.sol\":664:683  uint256 k = len - 1 */\n      swap1\n      pop\n        /* \"contracts/5_Demo2.sol\":694:795  while (i != 0) {... */\n    tag_21:\n        /* \"contracts/5_Demo2.sol\":706:707  0 */\n      0x00\n        /* \"contracts/5_Demo2.sol\":701:702  i */\n      dup7\n        /* \"contracts/5_Demo2.sol\":701:707  i != 0 */\n      eq\n        /* \"contracts/5_Demo2.sol\":694:795  while (i != 0) {... */\n      tag_22\n      jumpi\n        /* \"contracts/5_Demo2.sol\":758:760  10 */\n      0x0a\n        /* \"contracts/5_Demo2.sol\":754:755  i */\n      dup7\n        /* \"contracts/5_Demo2.sol\":754:760  i % 10 */\n      dup2\n      tag_23\n      jumpi\n      invalid\n    tag_23:\n      mod\n        /* \"contracts/5_Demo2.sol\":748:750  48 */\n      0x30\n        /* \"contracts/5_Demo2.sol\":748:761  48 + (i % 10) */\n      add\n        /* \"contracts/5_Demo2.sol\":735:763  bytes1(uint8(48 + (i % 10))) */\n      0xf8\n      shl\n        /* \"contracts/5_Demo2.sol\":723:727  bstr */\n      dup3\n        /* \"contracts/5_Demo2.sol\":728:731  k-- */\n      dup3\n      dup1\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n        /* \"contracts/5_Demo2.sol\":723:732  bstr[k--] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n      0x20\n      add\n      add\n        /* \"contracts/5_Demo2.sol\":723:763  bstr[k--] = bytes1(uint8(48 + (i % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/5_Demo2.sol\":782:784  10 */\n      0x0a\n        /* \"contracts/5_Demo2.sol\":777:784  i /= 10 */\n      dup7\n      dup2\n      tag_25\n      jumpi\n      invalid\n    tag_25:\n      div\n      swap6\n      pop\n        /* \"contracts/5_Demo2.sol\":694:795  while (i != 0) {... */\n      jump(tag_21)\n    tag_22:\n        /* \"contracts/5_Demo2.sol\":818:822  bstr */\n      dup2\n        /* \"contracts/5_Demo2.sol\":804:823  return string(bstr) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/5_Demo2.sol\":321:830  function integerToString(uint256 i) internal pure returns (string memory) {... */\n    tag_14:\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204e82c8906e75dadfc0a682b60801e23eb1d526121603c84ced23c7e785444d0164736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610282806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063949f80c514610030575b600080fd5b6100666004803603604081101561004657600080fd5b8101908080359060200190929190803590602001909291905050506100e1565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100a657808201518184015260208101905061008b565b50505050905090810190601f1680156100d35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606060008390506000839050600081830190506100fd81610108565b935050505092915050565b60606000821415610150576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610247565b600082905060005b6000821461017a57600a828161016a57fe5b0491508080600101915050610158565b60008167ffffffffffffffff8111801561019357600080fd5b506040519080825280601f01601f1916602001820160405280156101c65781602001600182028036833780820191505090505b50905060006001830390505b6000861461023f57600a86816101e457fe5b0660300160f81b828280600190039350815181106101fe57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161023757fe5b0495506101d2565b819450505050505b91905056fea26469706673582212204e82c8906e75dadfc0a682b60801e23eb1d526121603c84ced23c7e785444d0164736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x949F80C5 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x66 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP PUSH2 0xFD DUP2 PUSH2 0x108 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x150 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x247 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x17A JUMPI PUSH1 0xA DUP3 DUP2 PUSH2 0x16A JUMPI INVALID JUMPDEST DIV SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x158 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST PUSH1 0x0 DUP7 EQ PUSH2 0x23F JUMPI PUSH1 0xA DUP7 DUP2 PUSH2 0x1E4 JUMPI INVALID JUMPDEST MOD PUSH1 0x30 ADD PUSH1 0xF8 SHL DUP3 DUP3 DUP1 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x1FE JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP7 DUP2 PUSH2 0x237 JUMPI INVALID JUMPDEST DIV SWAP6 POP PUSH2 0x1D2 JUMP JUMPDEST DUP2 SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E DUP3 0xC8 SWAP1 PUSH15 0x75DADFC0A682B60801E23EB1D52612 AND SUB 0xC8 0x4C 0xED 0x23 0xC7 0xE7 DUP6 DIFFICULTY 0x4D ADD PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "60:772:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063949f80c514610030575b600080fd5b6100666004803603604081101561004657600080fd5b8101908080359060200190929190803590602001909291905050506100e1565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100a657808201518184015260208101905061008b565b50505050905090810190601f1680156100d35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606060008390506000839050600081830190506100fd81610108565b935050505092915050565b60606000821415610150576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610247565b600082905060005b6000821461017a57600a828161016a57fe5b0491508080600101915050610158565b60008167ffffffffffffffff8111801561019357600080fd5b506040519080825280601f01601f1916602001820160405280156101c65781602001600182028036833780820191505090505b50905060006001830390505b6000861461023f57600a86816101e457fe5b0660300160f81b828280600190039350815181106101fe57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161023757fe5b0495506101d2565b819450505050505b91905056fea26469706673582212204e82c8906e75dadfc0a682b60801e23eb1d526121603c84ced23c7e785444d0164736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x949F80C5 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x66 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP PUSH2 0xFD DUP2 PUSH2 0x108 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x150 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x247 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x17A JUMPI PUSH1 0xA DUP3 DUP2 PUSH2 0x16A JUMPI INVALID JUMPDEST DIV SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x158 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST PUSH1 0x0 DUP7 EQ PUSH2 0x23F JUMPI PUSH1 0xA DUP7 DUP2 PUSH2 0x1E4 JUMPI INVALID JUMPDEST MOD PUSH1 0x30 ADD PUSH1 0xF8 SHL DUP3 DUP3 DUP1 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x1FE JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP7 DUP2 PUSH2 0x237 JUMPI INVALID JUMPDEST DIV SWAP6 POP PUSH2 0x1D2 JUMP JUMPDEST DUP2 SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E DUP3 0xC8 SWAP1 PUSH15 0x75DADFC0A682B60801E23EB1D52612 AND SUB 0xC8 0x4C 0xED 0x23 0xC7 0xE7 DUP6 DIFFICULTY 0x4D ADD PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "60:772:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;81:234;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;169:13;198:9;210:2;198:14;;222:9;234:2;222:14;;246;267:1;263;:5;246:22;;285:23;301:6;285:15;:23::i;:::-;278:30;;;;;81:234;;;;:::o;321:509::-;380:13;414:1;409;:6;405:47;;;431:10;;;;;;;;;;;;;;;;;;;;;405:47;500:9;512:1;500:13;;523:11;544:66;556:1;551;:6;544:66;;578:2;573:7;;;;;;;;;594:5;;;;;;;544:66;;;620:17;650:3;640:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;620:34;;664:9;682:1;676:3;:7;664:19;;694:101;706:1;701;:6;694:101;;758:2;754:1;:6;;;;;;748:2;:13;735:28;;723:4;728:3;;;;;;;723:9;;;;;;;;;;;:40;;;;;;;;;;;782:2;777:7;;;;;;;;;694:101;;;818:4;804:19;;;;;;321:509;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "128400",
								"executionCost": "177",
								"totalCost": "128577"
							},
							"external": {
								"getResult(uint256,uint256)": "infinite"
							},
							"internal": {
								"integerToString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 832,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 832,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 832,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 832,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 832,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 832,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 832,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 832,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 832,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 832,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 832,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 832,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 832,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 832,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 832,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 832,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 832,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 832,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 832,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 832,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 832,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e82c8906e75dadfc0a682b60801e23eb1d526121603c84ced23c7e785444d0164736f6c63430007060033",
									".code": [
										{
											"begin": 60,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 832,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 832,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "949F80C5"
										},
										{
											"begin": 60,
											"end": 832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 81,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 182,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 198,
											"end": 207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 198,
											"end": 212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 222,
											"end": 236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 263,
											"end": 268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 246,
											"end": 268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 301,
											"end": 307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 285,
											"end": 308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 285,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 285,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 308,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 278,
											"end": 308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 315,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 321,
											"end": 830,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 321,
											"end": 830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 380,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 414,
											"end": 415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 409,
											"end": 415,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 405,
											"end": 452,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 405,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 405,
											"end": 452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 431,
											"end": 441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 431,
											"end": 441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 431,
											"end": 441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 431,
											"end": 441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 441,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 431,
											"end": 441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 431,
											"end": 441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 431,
											"end": 441,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 431,
											"end": 441,
											"name": "PUSH",
											"source": 0,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 431,
											"end": 441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 431,
											"end": 441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 431,
											"end": 441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 431,
											"end": 441,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 405,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 500,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 500,
											"end": 513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 523,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 610,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 544,
											"end": 610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 556,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 552,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 551,
											"end": 557,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 544,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 544,
											"end": 610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 578,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 573,
											"end": 580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 573,
											"end": 580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 573,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 573,
											"end": 580,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 573,
											"end": 580,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 573,
											"end": 580,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 573,
											"end": 580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 573,
											"end": 580,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 573,
											"end": 580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 573,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 594,
											"end": 599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 594,
											"end": 599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 544,
											"end": 610,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 610,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 544,
											"end": 610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 620,
											"end": 637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 640,
											"end": 654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 640,
											"end": 654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 640,
											"end": 654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 640,
											"end": 654,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 640,
											"end": 654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 640,
											"end": 654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 640,
											"end": 654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 640,
											"end": 654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 664,
											"end": 673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 676,
											"end": 679,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 676,
											"end": 683,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 664,
											"end": 683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 795,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 694,
											"end": 795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 706,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 702,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 701,
											"end": 707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 694,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 694,
											"end": 795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 758,
											"end": 760,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 754,
											"end": 755,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 754,
											"end": 760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 754,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 754,
											"end": 760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 754,
											"end": 760,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 754,
											"end": 760,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 754,
											"end": 760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 760,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 748,
											"end": 761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 735,
											"end": 763,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 723,
											"end": 727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 728,
											"end": 731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 728,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 728,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 728,
											"end": 731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 728,
											"end": 731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 728,
											"end": 731,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 728,
											"end": 731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 723,
											"end": 732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 723,
											"end": 732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 723,
											"end": 732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 723,
											"end": 732,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 723,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 723,
											"end": 732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 723,
											"end": 732,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 723,
											"end": 732,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 723,
											"end": 732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 723,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 723,
											"end": 732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 723,
											"end": 732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 723,
											"end": 763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 723,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 723,
											"end": 763,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 723,
											"end": 763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 723,
											"end": 763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 723,
											"end": 763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 723,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 763,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 723,
											"end": 763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 723,
											"end": 763,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 723,
											"end": 763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 777,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 777,
											"end": 784,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 777,
											"end": 784,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 777,
											"end": 784,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 777,
											"end": 784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 777,
											"end": 784,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 777,
											"end": 784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 694,
											"end": 795,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 795,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 694,
											"end": 795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 818,
											"end": 822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 804,
											"end": 823,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 804,
											"end": 823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 804,
											"end": 823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 804,
											"end": 823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 804,
											"end": 823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 804,
											"end": 823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 830,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 321,
											"end": 830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 321,
											"end": 830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 321,
											"end": 830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 830,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getResult(uint256,uint256)": "949f80c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pa\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pb\",\"type\":\"uint256\"}],\"name\":\"getResult\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/5_Demo2.sol\":\"Demo2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/5_Demo2.sol\":{\"keccak256\":\"0xe2fd50ad01c73a76c3a48304a9d5541e6718476aabef3b5284391ccec3b7d9d0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ecaabf0f4f572c939258da1ab03665de2d0dc2f2f31f1356b97405433c48709f\",\"dweb:/ipfs/QmW5BjbS8XXQ1sneqDEnk2TZkvJxC8q21gHSh57PPY4xqP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/5_Demo2.sol": {
				"ast": {
					"absolutePath": "contracts/5_Demo2.sol",
					"exportedSymbols": {
						"Demo2": [
							109
						]
					},
					"id": 110,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109
							],
							"name": "Demo2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "188:127:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "a",
														"nodeType": "VariableDeclaration",
														"scope": 28,
														"src": "198:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "198:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 13,
												"initialValue": {
													"id": 12,
													"name": "pa",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "210:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "198:14:0"
											},
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"scope": 28,
														"src": "222:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 14,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "222:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 17,
												"initialValue": {
													"id": 16,
													"name": "pb",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5,
													"src": "234:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "222:14:0"
											},
											{
												"assignments": [
													19
												],
												"declarations": [
													{
														"constant": false,
														"id": 19,
														"mutability": "mutable",
														"name": "result",
														"nodeType": "VariableDeclaration",
														"scope": 28,
														"src": "246:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 18,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "246:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 23,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 20,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "263:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 21,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "267:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "263:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "246:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 25,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "301:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 24,
														"name": "integerToString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "285:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "285:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 9,
												"id": 27,
												"nodeType": "Return",
												"src": "278:30:0"
											}
										]
									},
									"functionSelector": "949f80c5",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "pa",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "100:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "pb",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "112:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "99:24:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "169:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 7,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "169:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "168:15:0"
									},
									"scope": 109,
									"src": "81:234:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "395:435:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 36,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "409:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "414:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "409:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 42,
												"nodeType": "IfStatement",
												"src": "405:47:0",
												"trueBody": {
													"id": 41,
													"nodeType": "Block",
													"src": "417:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "438:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 35,
															"id": 40,
															"nodeType": "Return",
															"src": "431:10:0"
														}
													]
												}
											},
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"mutability": "mutable",
														"name": "j",
														"nodeType": "VariableDeclaration",
														"scope": 107,
														"src": "500:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 43,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "500:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 46,
												"initialValue": {
													"id": 45,
													"name": "i",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "512:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "500:13:0"
											},
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "len",
														"nodeType": "VariableDeclaration",
														"scope": 107,
														"src": "523:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 47,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "523:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 49,
												"nodeType": "VariableDeclarationStatement",
												"src": "523:11:0"
											},
											{
												"body": {
													"id": 60,
													"nodeType": "Block",
													"src": "559:51:0",
													"statements": [
														{
															"expression": {
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 53,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "573:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "578:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "573:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 56,
															"nodeType": "ExpressionStatement",
															"src": "573:7:0"
														},
														{
															"expression": {
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "594:5:0",
																"subExpression": {
																	"id": 57,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "594:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 59,
															"nodeType": "ExpressionStatement",
															"src": "594:5:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 50,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "551:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "556:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "551:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 61,
												"nodeType": "WhileStatement",
												"src": "544:66:0"
											},
											{
												"assignments": [
													63
												],
												"declarations": [
													{
														"constant": false,
														"id": 63,
														"mutability": "mutable",
														"name": "bstr",
														"nodeType": "VariableDeclaration",
														"scope": 107,
														"src": "620:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 62,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "620:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"arguments": [
														{
															"id": 66,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "650:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "640:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 64,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "644:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "640:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "620:34:0"
											},
											{
												"assignments": [
													70
												],
												"declarations": [
													{
														"constant": false,
														"id": 70,
														"mutability": "mutable",
														"name": "k",
														"nodeType": "VariableDeclaration",
														"scope": 107,
														"src": "664:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 69,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "664:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 74,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 71,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "676:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "682:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "664:19:0"
											},
											{
												"body": {
													"id": 100,
													"nodeType": "Block",
													"src": "709:86:0",
													"statements": [
														{
															"expression": {
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 78,
																		"name": "bstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 63,
																		"src": "723:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 81,
																	"indexExpression": {
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "728:3:0",
																		"subExpression": {
																			"id": 79,
																			"name": "k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 70,
																			"src": "728:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "723:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 91,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 86,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "748:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 89,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 87,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 31,
																									"src": "754:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 88,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "758:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "754:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 90,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "753:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "748:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 85,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "742:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 84,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "742:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 92,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "742:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 83,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "735:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 82,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "735:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "735:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "723:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 95,
															"nodeType": "ExpressionStatement",
															"src": "723:40:0"
														},
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 96,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "777:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "782:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "777:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "777:7:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 75,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "701:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "706:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "701:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 101,
												"nodeType": "WhileStatement",
												"src": "694:101:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 104,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "818:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "811:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 102,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "811:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "811:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 35,
												"id": 106,
												"nodeType": "Return",
												"src": "804:19:0"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "integerToString",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "i",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:11:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "380:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 33,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:15:0"
									},
									"scope": 109,
									"src": "321:509:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 110,
							"src": "60:772:0"
						}
					],
					"src": "35:798:0"
				},
				"id": 0
			}
		}
	}
}